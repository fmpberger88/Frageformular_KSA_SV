shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
shiny::runApp('Frageformular')
shiny::runApp('Frageformular')
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
shiny::runApp('Frageformular')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# Create example data
df <- data.frame(group = c("A", "A", "B", "B", "C", "C"), category = c("X", "Y", "X", "Y", "X", "Y"), value = c(10, 20, 30, 40, 50, 60))
# Create bar plot with default width
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = "dodge2")
# Create bar plot with fixed width
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.9))
library(ggplot2)
# Create example data
df <- data.frame(group = c("A", "A", "B", "B", "C", "C", "C"), category = c("X", "Y", "X", "Y", "X", "Y","Y"), value = c(10, 20, 30, 40, 50, 60, 70))
# Create bar plot with default width
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = "dodge2")
# Create bar plot with fixed width
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.9))
library(ggplot2)
# Create example data
df <- data.frame(group = c("A", "A", "B", "B", "C", "C", "C"), category = c("X", "Y", "X", "Y", "X", "Y","Y"), value = c(10, 20, 30, 40, 50, 60, 70))
# Define a width for each category
category_widths <- c(X = 0.8, Y = 0.8)
# Create bar plot with adjusted width
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = position_dodge2(width = 1)) +
scale_x_discrete(expand = c(0, 0.5),
limits = c("A", "B", "C"),
labels = c("Group A", "Group B", "Group C")) +
scale_fill_manual(values = c("blue", "red"),
guide = guide_legend(title = "Category")) +
theme_minimal() +
theme(legend.position = "bottom") +
coord_cartesian(ylim = c(0, 70)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()) +
geom_blank(data = data.frame(category = unique(df$category)),
aes(x = category, y = 0),
inherit.aes = FALSE,
show.legend = FALSE,
width = category_widths)
library(ggplot2)
# Create example data
df <- data.frame(group = c("A", "A", "B", "B", "C", "C"), category = c("X", "Y", "X", "Y", "X", "Y"), value = c(10, 20, 30, 40, 50, 60))
# Define the width of each category
category_widths <- c(X = 0.8, Y = 0.8)
# Create bar plot with adjusted width and text labels
ggplot(df, aes(x = group, y = value, fill = category)) +
geom_bar(stat = "identity", position = position_dodge2(width = 1)) +
scale_x_discrete(expand = c(0, 0.5),
limits = c("A", "B", "C"),
labels = c("Group A", "Group B", "Group C")) +
scale_fill_manual(values = c("blue", "red"),
guide = guide_legend(title = "Category")) +
theme_minimal() +
theme(legend.position = "bottom") +
coord_cartesian(ylim = c(0, 70)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank()) +
geom_blank(data = data.frame(category = unique(df$category)),
aes(x = category, y = 0),
inherit.aes = FALSE,
show.legend = FALSE,
width = category_widths) +
geom_text(aes(x = group, y = value, label = value),
position = position_dodge2(width = 1),
vjust = -0.5)
install.packages(c(
"gapminder", "ggforce", "gh", "globals", "openintro", "profvis",
"RSQLite", "shiny", "shinycssloaders", "shinyFeedback",
"shinythemes", "testthat", "thematic", "tidyverse", "vroom",
"waiter", "xml2", "zeallot"
))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
install.packages(c(
"gapminder", "ggforce", "gh", "globals", "openintro", "profvis",
"RSQLite", "shiny", "shinycssloaders", "shinyFeedback",
"shinythemes", "testthat", "thematic", "tidyverse", "vroom",
"waiter", "xml2", "zeallot"
))
install.packages(c("gapminder", "ggforce", "gh", "globals", "openintro", "profvis", "RSQLite", "shiny", "shinycssloaders", "shinyFeedback", "shinythemes", "testthat", "thematic", "tidyverse", "vroom", "waiter", "xml2", "zeallot"))
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
install.packages("htmltools")
install.packages("htmltools")
library(htmltools)
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
setwd("~/R/rprojects/Frageformular_KSA_SV/Frageformular")
runApp()
runApp()
runApp()
runApp()
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
library(shinydashboard)
runApp('Frageformular')
runApp('test/exampe')
runApp('test/exampe')
runApp('test/exampe')
runApp('test/exampe')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('test/example')
runApp('test/example')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
shiny::runApp('Frageformular')
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
shiny::runApp('Frageformular')
runApp('Frageformular')
shiny::runApp('Frageformular')
shiny::runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
runApp('Frageformular')
library(shiny)
runGist('https://gist.github.com/yihui/6091942')
runApp('Frageformular')
runApp('Frageformular')
